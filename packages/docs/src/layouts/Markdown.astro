---
import BaseLayout from "./_Base.astro";
import Navigation from "../components/Navigation.astro";
import Toc from "../components/Toc.vue";

import * as navigation from "../navigation";
import PrevNext from "../components/PrevNext.astro";

const { frontmatter } = Astro.props;

let navigationItems = [];
if (frontmatter.navigation) {
  // @ts-ignore
  navigationItems = navigation[frontmatter.navigation] || [];
}

const hasLeftSidebar = navigationItems.length > 0;
const hasRightSidebar = !!frontmatter.toc;
---

<BaseLayout title={frontmatter.title}>
  <div
    class="layout"
    class:list={{
      "layout--right-sidebar": hasRightSidebar,
      "layout--left-sidebar": hasLeftSidebar,
    }}
  >
    {
      hasLeftSidebar && (
        <aside class="sidebar-left">
          <div class="affix">
            <Navigation items={navigationItems} />
          </div>
        </aside>
      )
    }

    <main>
      <slot />

      <PrevNext prev={frontmatter.prev} next={frontmatter.next} />
    </main>

    {
      hasRightSidebar && (
        <aside class="sidebar-right">
          <div class="affix">
            <Toc client:only="vue" />
          </div>
        </aside>
      )
    }
  </div>
</BaseLayout>

<style lang="scss">
  .layout {
    display: grid;
    gap: 2rem;
    padding: 6rem var(--page-padding) 2rem;
    max-width: var(--page-max-width);
    margin: 0 auto;
  }

  .affix {
    position: sticky;
    top: 6rem;
    align-self: start;
  }

  .sidebar-left,
  .sidebar-right {
    position: relative;
  }

  .layout--left-sidebar {
    @media screen and (min-width: 40rem) {
      grid-template-columns: 16rem 1fr;
    }
  }

  .layout--right-sidebar {
    @media screen and (min-width: 40rem) {
      grid-template-columns: 1fr 16rem;
    }
  }

  .layout--left-sidebar.layout--right-sidebar {
    @media screen and (min-width: 40rem) {
      grid-template-columns: 16rem 1fr;
    }

    @media screen and (min-width: 60rem) {
      grid-template-columns: 16rem 1fr 16rem;
    }
  }
</style>
